diff --git a/sam.c b/sam.c
index 7e58da6e..be6f173a 100644
--- a/sam.c
+++ b/sam.c
@@ -209,7 +209,7 @@ sam_hdr_t *sam_hdr_dup(const sam_hdr_t *h0)
 
         if (sam_hdr_update_target_arrays(h, h0->hrecs, 0) != 0)
             goto fail;
-    } else {
+    } else if (h0->text) {
         h->l_text = h0->l_text;
         h->text = malloc(h->l_text + 1);
         if (!h->text) goto fail;
@@ -5145,12 +5145,14 @@ int bam_aux_update_array(bam1_t *b, const char tag[2],
 
     s[1] = type;
     u32_to_le(items, s + 2);
+    if (new_sz > 0) {
 #ifdef HTS_LITTLE_ENDIAN
-    memcpy(s + 6, data, new_sz);
-    return 0;
+        memcpy(s + 6, data, new_sz);
 #else
-    return aux_to_le(type, s + 6, data, new_sz);
+        return aux_to_le(type, s + 6, data, new_sz);
 #endif
+    }
+    return 0;
 }
 
 static inline int64_t get_int_aux_val(uint8_t type, const uint8_t *s,
diff --git a/simd.c b/simd.c
index 865dd887..b287a7d1 100644
--- a/simd.c
+++ b/simd.c
@@ -191,7 +191,7 @@ static void nibble2base_neon(uint8_t *nib, char *seq0, int len) {
         uint8x16_t low_nucleotides = vcombine_u8(low_low, low_high);
 #endif
 
-#ifdef __aarch64__
+#if defined(__aarch64__) && (!(defined(__GNUC__) && __GNUC__ < 9) || defined(__clang__))
         vst1q_u8_x2(seq, vzipq_u8(high_nucleotides, low_nucleotides));
 #else
         // Avoid vst1q_u8_x2 as GCC erroneously omits it on 32-bit ARM
