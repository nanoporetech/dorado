dorado_add_library(
    NAME
        dorado_utils
    PUBLIC_DIR
        utils
    SOURCES_PUBLIC
        alignment_utils.h
        arg_parse_ext.h
        AsyncQueue.h
        barcode_kits.h
        basecaller_utils.h
        cigar.h
        concurrency/async_task_executor.h
        concurrency/detail/priority_task_queue.h
        concurrency/multi_queue_thread_pool.h
        concurrency/synchronisation.h
        concurrency/task_priority.h
        context_container.h
        crypto_utils.h
        dev_utils.h
        fs_utils.h
        gzip_reader.h
        jthread.h
        locale_utils.h
        log_utils.h
        math_utils.h
        memory_utils.h
        overlap.h
        parameters.h
        PostCondition.h
        SampleSheet.h
        scoped_trace_log.h
        sequence_utils.h
        stats.h
        stream_utils.h
        sys_stats.h
        sys_utils.h
        thread_utils.h
        time_utils.h
        timer_high_res.h
        tty_utils.h
        types.h
        uuid_utils.h
        paf_utils.h
        container_utils.h
        io_utils.h
        rle.h
        ssize.h
        span.h
    SOURCES_PRIVATE
        alignment_utils.cpp
        barcode_kits.cpp
        basecaller_utils.cpp
        cigar.cpp
        concurrency/async_task_executor.cpp
        concurrency/detail/priority_task_queue.cpp
        concurrency/multi_queue_thread_pool.cpp
        crypto_utils.cpp
        dev_utils.cpp
        fs_utils.cpp
        gzip_reader.cpp
        locale_utils.cpp
        log_utils.cpp
        memory_utils.cpp
        parameters.cpp
        SampleSheet.cpp
        scoped_trace_log.cpp
        sequence_utils.cpp
        stats.cpp
        sys_stats.cpp
        sys_utils.cpp
        thread_utils.cpp
        time_utils.cpp
        uuid_utils.cpp
        paf_utils.cpp
        container_utils.cpp
        io_utils.cpp
    DEPENDS_PUBLIC
        argparse::argparse
        date::date
        dorado_version
        edlib
        nvtx
        spdlog::spdlog
    DEPENDS_PRIVATE
        dorado_compat
        minimap2
    NO_TORCH
)

target_compile_definitions(dorado_utils
    PUBLIC
        ENABLE_PER_READ_TRACE=$<BOOL:${DORADO_PER_READ_TRACE}>
        DORADO_CUDA_BUILD=$<NOT:$<BOOL:${APPLE}>>
        DORADO_METAL_BUILD=$<BOOL:${APPLE}>
)
if (CMAKE_SYSTEM_NAME STREQUAL "Linux" AND CMAKE_SYSTEM_PROCESSOR MATCHES "^aarch64*|^arm*")
    target_compile_definitions(dorado_utils PUBLIC DORADO_ORIN=1)
else()
    target_compile_definitions(dorado_utils PUBLIC DORADO_ORIN=0)
endif()

if (NOT APPLE)
    target_link_libraries(dorado_utils PRIVATE OpenSSL::SSL)
endif()
